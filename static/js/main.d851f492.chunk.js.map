{"version":3,"sources":["reducers/userReducer.js","components/Page/SingIn.js","components/Page/SingUp.js","components/Item/CardBox.js","components/Item/Navbar.js","components/Page/Home.js","components/Page/CreatePost.js","App.js","serviceWorker.js","index.js"],"names":["reducer","state","action","type","payload","useStyles","makeStyles","theme","paper","marginTop","spacing","padding","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","primary","main","form","width","submit","link","textAlign","SingIn","classes","useContext","UserContext","dispatch","history","useHistory","useState","email","setEmail","password","setPassword","Container","component","maxWidth","Paper","elevation","className","Avatar","Typography","variant","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","value","onChange","e","target","Button","color","onClick","fetch","method","headers","body","JSON","stringify","then","res","json","data","error","alert","localStorage","setItem","token","user","push","catch","err","console","log","Grid","to","style","textDecoration","SingUp","setName","ButterToast","raise","content","Crisp","title","message","scheme","Cinnamon","SCHEME_PURPLE","icon","AssignmentTurnedIn","goBack","root","height","marginBottom","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","red","btn","comment","CardBox","postName","postById","photo","like","comments","countLike","setData","setComment","Card","CardHeader","aria-label","IconButton","_id","authrization","getItem","result","filter","item","subheader","CardMedia","image","CardActions","disableSpacing","postId","newData","map","unlikeCount","likeCount","CardContent","postedBy","commentBody","onSubmit","preventDefault","background","line","Navbar","AppBar","position","Toolbar","container","sm","Badge","fontSize","badgeContent","clear","Home","useEffect","posts","key","likes","includes","length","input","CreatePost","setTitle","setBody","setImage","url","setUrl","files","FormData","append","PostDetails","createContext","Routing","parse","exact","path","App","useReducer","Provider","vertical","POS_BOTTOM","horizontal","POS_CENTER","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d851f492.chunk.js","sourcesContent":["export const initialState = null;\r\n\r\nexport const reducer = (state, action) => {\r\n  if (action.type === \"USER\") {\r\n    return action.payload;\r\n  }\r\n\r\n  if (action.type === \"CLEAR\") {\r\n    return null;\r\n  }\r\n  return state;\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../../App\";\r\nimport {\r\n  makeStyles,\r\n  Container,\r\n  Paper,\r\n  Avatar,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(18),\r\n    padding: theme.spacing(3),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  link: {\r\n    textAlign: \"center\",\r\n    margin: theme.spacing(0, 0, 1),\r\n  },\r\n}));\r\n\r\nexport default function SingIn() {\r\n  const classes = useStyles();\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const PostData = () => {\r\n    fetch(\"https://instar-clone.herokuapp.com/signin\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          alert(JSON.stringify(data.error));\r\n        } else {\r\n          localStorage.setItem(\"jwt\", data.token);\r\n          localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n          dispatch({ type: \"USER\", payload: data.user });\r\n\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Paper elevation={3} className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sing in\r\n        </Typography>\r\n        <form className={classes.form}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={email}\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n            }}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={password}\r\n            onChange={(e) => {\r\n              setPassword(e.target.value);\r\n            }}\r\n          />\r\n          <Button\r\n            type=\"button\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={() => PostData()}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid className={classes.link}>\r\n            <Link to=\"/singup\" variant=\"body2\" style={{color: '#3f51b5', textDecoration: 'none' }}>\r\n              {\"You have an account ?\"}\r\n            </Link>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Container,\r\n  Paper,\r\n  Avatar,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport ButterToast, { Cinnamon } from \"butter-toast\";\r\nimport { AssignmentTurnedIn } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(18),\r\n    padding: theme.spacing(3),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  link: {\r\n    textAlign: \"center\",\r\n    margin: theme.spacing(0, 0, 1),\r\n  },\r\n}));\r\n\r\nexport default function SingUp() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const PostData = () => {\r\n    fetch(\"https://instar-clone.herokuapp.com/signup\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name,\r\n        email,\r\n        password,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          alert(JSON.stringify(data.error));\r\n        } else {\r\n          ButterToast.raise({\r\n            content: (\r\n              <Cinnamon.Crisp\r\n                title=\"Post Box\"\r\n                content={data.message}\r\n                scheme={Cinnamon.Crisp.SCHEME_PURPLE}\r\n                icon={<AssignmentTurnedIn />}\r\n              />\r\n            ),\r\n          });\r\n          // alert(JSON.stringify(data.message));\r\n          history.goBack(\"/\");\r\n        }\r\n        console.log(data);\r\n      });\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Paper elevation={3} className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sing up\r\n        </Typography>\r\n        <form className={classes.form}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"fullname\"\r\n            label=\"Full Name\"\r\n            name=\"fullname\"\r\n            autoComplete=\"fullname\"\r\n            autoFocus\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n            }}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n\r\n          <Button\r\n            type=\"button\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={() => PostData()}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid className={classes.link}>\r\n            <Link\r\n              to=\"/\"\r\n              variant=\"body2\"\r\n              style={{ color: \"#3f51b5\", textDecoration: \"none\" }}\r\n            >\r\n              {\"Don't have an account ?\"}\r\n            </Link>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { UserContext } from \"../../App\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  makeStyles,\r\n  Container,\r\n  Card,\r\n  CardHeader,\r\n  Avatar,\r\n  IconButton,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\nimport ButterToast, { Cinnamon } from \"butter-toast\";\r\nimport { AssignmentTurnedIn } from \"@material-ui/icons\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 600,\r\n    height: \"auto\",\r\n    alignItems: \"center\",\r\n    marginBottom: 50,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  btn: {\r\n    display: \"flex\",\r\n  },\r\n  comment: {\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\nexport default function CardBox({\r\n  id,\r\n  postName,\r\n  postById,\r\n  photo,\r\n  like,\r\n  title,\r\n  body,\r\n  comments,\r\n  countLike,\r\n}) {\r\n  const classes = useStyles();\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [data, setData] = useState([]);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  \r\n\r\n  const likeCount = (id) => {\r\n    fetch(\"https://instar-clone.herokuapp.com/like\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authrization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({ postId: id }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        // console.log(result);\r\n        const newData = data.map((item) => {\r\n          if (id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const unlikeCount = (id) => {\r\n    fetch(\"https://instar-clone.herokuapp.com/unlike\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authrization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({ postId: id }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        // console.log(result);\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const addComment = (commentBody, postId) => {\r\n    fetch(\"https://instar-clone.herokuapp.com/comment\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authrization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId,\r\n        commentBody,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const deletePost = (postId) => {\r\n    fetch(\"https://instar-clone.herokuapp.com/deletepost/\" + postId, {\r\n      method: \"delete\",\r\n      headers: {\r\n        authrization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        const newData = data.filter((item) => {\r\n          return item._id !== result._id;\r\n        });\r\n        ButterToast.raise({\r\n          content: (\r\n            <Cinnamon.Crisp\r\n              title=\"Post Box\"\r\n              content=\"Delete Post successfully\"\r\n              scheme={Cinnamon.Crisp.SCHEME_PURPLE}\r\n              icon={<AssignmentTurnedIn />}\r\n            />\r\n          ),\r\n        });\r\n      });\r\n  };\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            {postName}\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            {postById === state._id && (\r\n              <DeleteForeverIcon onClick={() => deletePost(id)} />\r\n            )}\r\n          </IconButton>\r\n        }\r\n        title={postName}\r\n        subheader=\"September 14, 2016\"\r\n      />\r\n\r\n      <CardMedia className={classes.media} image={photo} title=\"Paella dish\" />\r\n      <CardActions disableSpacing>\r\n        {countLike ? (\r\n          <IconButton\r\n            color=\"secondary\"\r\n            aria-label=\"add to favorites\"\r\n            onClick={() => unlikeCount(id)}\r\n          >\r\n            <FavoriteBorderIcon />\r\n          </IconButton>\r\n        ) : (\r\n          <IconButton\r\n            aria-label=\"add to favorites\"\r\n            onClick={() => likeCount(id)}\r\n          >\r\n            <FavoriteBorderIcon />\r\n          </IconButton>\r\n        )}\r\n\r\n        <IconButton aria-label=\"share\">\r\n          <ShareOutlinedIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {like} likes\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {title}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {body}\r\n        </Typography>\r\n\r\n        {comments.map((item) => {\r\n          return (\r\n            <Grid className={classes.comment}>\r\n              <Typography\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n                component=\"h3\"\r\n                style={{ width: \"70px\" }}\r\n              >\r\n                {item.postedBy.name}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n                component=\"p\"\r\n                style={{ marginLeft: \"10px\" }}\r\n              >\r\n                {item.commentBody}\r\n              </Typography>\r\n            </Grid>\r\n          );\r\n        })}\r\n        <form\r\n          className={classes.btn}\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            addComment(comment, id);\r\n            setComment(\"\");\r\n          }}\r\n        >\r\n          <TextField\r\n            margin=\"normal\"\r\n            fullWidth\r\n            label=\"Add a comment\"\r\n            name=\"comment\"\r\n            // onChange={(e) => setComment(e.target[0].value)}\r\n            value={comment}\r\n            onChange={(e) => {\r\n              setComment(e.target.value);\r\n            }}\r\n          />\r\n          <Button type=\"submit\" color=\"primary\">\r\n            Post\r\n          </Button>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../../App\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Grid,\r\n  InputBase,\r\n  IconButton,\r\n  Badge,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // position: \"fixed\",\r\n    background: \"#fff\",\r\n    color: \"#000\",\r\n  },\r\n  line: {\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\nexport default function Navbar() {\r\n  const classes = useStyles();\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const history = useHistory();\r\n  return (\r\n    <AppBar position=\"static\" className={classes.root}>\r\n      <Toolbar>\r\n        <Grid container alignItems=\"center\">\r\n          <Grid item>\r\n            <Typography>Photo Gallery</Typography>\r\n          </Grid>\r\n          <Grid item sm></Grid>\r\n          <Grid item>\r\n            <IconButton>\r\n              <Badge\r\n                color=\"secondary\"\r\n                onClick={() => {\r\n                  history.push(\"/createpost\");\r\n                }}\r\n              >\r\n                <AddCircleOutlineIcon fontSize=\"small\" />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton>\r\n              <Badge color=\"secondary\">\r\n                <AccountCircleIcon fontSize=\"small\" />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton>\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <NotificationsNoneIcon fontSize=\"small\" />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton>\r\n              <Badge badgeContent={3} color=\"primary\">\r\n                <ChatBubbleOutlineIcon fontSize=\"small\" />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={() => {\r\n                localStorage.clear();\r\n                dispatch({ type: \"CLEAR\" });\r\n                history.push(\"/singin\");\r\n              }}\r\n            >\r\n              <PowerSettingsNewIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { UserContext } from \"../../App\";\r\nimport CardBox from \"../Item/CardBox\";\r\nimport { Container, Grid, makeStyles } from \"@material-ui/core\";\r\nimport Navbar from \"../Item/Navbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(6),\r\n    margin: \"auto\",\r\n    padding: theme.spacing(3),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\nexport default function Home() {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const classes = useStyles();\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://instar-clone.herokuapp.com/allpost\", {\r\n      headers: {\r\n        authrization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setData(result.posts);\r\n        console.log(result);\r\n      });\r\n  }, [data]);\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid className={classes.root}>\r\n        {data.map((item) => {\r\n          return (\r\n            <CardBox\r\n              key={item._id}\r\n              id={item._id}\r\n              postName={item.postedBy.name}\r\n              postById={item.postedBy._id}\r\n              photo={item.photo}\r\n              countLike={item.likes.includes(state._id)}\r\n              like={item.likes.length}\r\n              title={item.title}\r\n              body={item.body}\r\n              comments={item.comments}\r\n            />\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Container,\r\n  Paper,\r\n  Avatar,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { Link, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport ButterToast, { Cinnamon } from \"butter-toast\";\r\nimport BeenhereIcon from \"@material-ui/icons/Beenhere\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport Navbar from \"../Item/Navbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(18),\r\n    padding: theme.spacing(3),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  link: {\r\n    textAlign: \"center\",\r\n    margin: theme.spacing(0, 0, 1),\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function CreatePost() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n  useEffect(() => {\r\n    if (url) {\r\n      fetch(\"https://instar-clone.herokuapp.com/createpost\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          authrization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        },\r\n        body: JSON.stringify({\r\n          title,\r\n          body,\r\n          photo: url,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          if (data.error) {\r\n            ButterToast.raise({\r\n              content: (\r\n                <Cinnamon.Crisp\r\n                  title=\"Post Box\"\r\n                  content={data.error}\r\n                  scheme={Cinnamon.Crisp.SCHEME_PURPLE}\r\n                  icon={<CancelIcon />}\r\n                />\r\n              ),\r\n            });\r\n          } else {\r\n            ButterToast.raise({\r\n              content: (\r\n                <Cinnamon.Crisp\r\n                  title=\"Post Box\"\r\n                  content=\"create post successfully\"\r\n                  scheme={Cinnamon.Crisp.SCHEME_PURPLE}\r\n                  icon={<BeenhereIcon />}\r\n                />\r\n              ),\r\n            });\r\n            history.push(\"/\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, [url]);\r\n\r\n  const PostDetails = () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", image);\r\n    data.append(\"upload_preset\", \"instagram\");\r\n    data.append(\"cloud_name\", \"bester\");\r\n\r\n    fetch(\"https://api.cloudinary.com/v1_1/bester/image/upload\", {\r\n      method: \"post\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setUrl(data.url);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Paper elevation={3} className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <CreateIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Create Post\r\n        </Typography>\r\n        <form className={classes.form}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            name=\"title\"\r\n            autoComplete=\"title\"\r\n            autoFocus\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"body\"\r\n            label=\"Body\"\r\n            id=\"body\"\r\n            value={body}\r\n            onChange={(e) => setBody(e.target.value)}\r\n          />\r\n          <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n          <Button\r\n            type=\"button\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={() => PostDetails()}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Grid className={classes.link}>\r\n            <Link\r\n              to=\"/\"\r\n              variant=\"body2\"\r\n              style={{ color: \"#3f51b5\", textDecoration: \"none\" }}\r\n            >\r\n              {\"Back to home\"}\r\n            </Link>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { createContext, useReducer, useEffect, useContext } from \"react\";\nimport { reducer, initialState } from \"./reducers/userReducer\";\n\n// import \"./App.css\";\nimport { BrowserRouter, Route, Switch, useHistory } from \"react-router-dom\";\nimport SingIn from \"./components/Page/SingIn\";\nimport SingUp from \"./components/Page/SingUp\";\nimport Home from \"./components/Page/Home\";\nimport ButterToast, { POS_CENTER, POS_BOTTOM } from \"butter-toast\";\nimport Navbar from \"./components/Item/Navbar\";\nimport CreatePost from \"./components/Page/CreatePost\";\n\nexport const UserContext = createContext();\n\nconst Routing = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n\n    if (user) {\n      dispatch({ type: \"USER\", payload: user });\n      history.push(\"/\");\n    } else {\n      history.push(\"/singin\");\n    }\n  }, []);\n\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/singup\" component={SingUp} />\n      <Route path=\"/singin\" component={SingIn} />\n      <Route path=\"/createpost\" component={CreatePost} />\n    </Switch>\n  );\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <UserContext.Provider value={{ state, dispatch }}>\n      <BrowserRouter>\n        {state ? <Navbar /> : \"\"}\n\n        <Routing />\n        <ButterToast\n          position={{ vertical: POS_BOTTOM, horizontal: POS_CENTER }}\n        />\n      </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}